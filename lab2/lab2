#include <stdio.h>
#include <string.h>
#include <ctype.h>

void swap(char *a, char *b) {
    char tmp = *a;
    *a = *b;
    *b = tmp;
}

int bad_input() {
    printf("bad input");
    return 0;
}

int check(char *sequence) {
    for (int i = 0; sequence[i] != '\0'; i++) {
        if (isdigit(sequence[i]) == 0) {
            return 0;
        }
        for (int j = i + 1; sequence[j] != '\0'; j++) {
            if (sequence[i] == sequence[j]) {
                return 0;
            }
        }
    }
    return 1;
}

void reverse(char str[], int index_Max) {
    int length = strlen(str);
    for (int first = index_Max + 1, last = length - 1; first < last; first++, last--) {
        int buf = str[first];
        str[first] = str[last];
        str[last] = buf;
    }
}

int next_permutation(char *sequence, int sequence_len) {
    int index_Max = sequence_len - 1;
    int MAX = 0;

    int perm_counter = 0;
    for (int i = 0; i < sequence_len; ++i) {
        if ((sequence[i] < sequence[i + 1])) {
            MAX = sequence[i];
            index_Max = i;
            perm_counter += 1;
        }
    }

    if (perm_counter != 0) {
        int element_after_max = 0;
        for (int i = index_Max + 1; i < sequence_len; ++i) {
            if (sequence[i] > MAX) {
                element_after_max = i;
            }
        }
        swap(&sequence[index_Max], &sequence[element_after_max]);
        reverse(sequence, index_Max);

        return 1;
    }
    return 0;
}

int main() {
    char sequence[100];
    if (fgets(sequence, 100, stdin) == NULL) {
        bad_input();
    }

    int flag = 1;

    int sequence_len = strlen(sequence) - 1;
    sequence[sequence_len] = '\0';

    long long N;
    if (scanf("%lld", &N) == 0) {
        return 0;
    }

    if (check(sequence) == 0) {
        flag = 0;
        bad_input();
    }

    if (N < 0) {
        flag = 0;
        bad_input();
    }

    while (N > 0 && flag != 0) {
        int correct = next_permutation(sequence, sequence_len);
        if (correct == 1) {
            printf("%s\n", sequence);
        } else {
            break;
        }
        N--;
    }
    return 0;
}
