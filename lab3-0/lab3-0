#include <stdlib.h>
#include <stdio.h>
#include <assert.h>

void Swap(int *a, int *b) {
    int buf = *a;
    *a = *b;
    *b = buf;
}

void QuickSort(int *array, int left, int right) {
    int pivot_index = (left + right) / 2;
    int i = left, j = right;
    if (left < right) {
        while (i < j) {
            while (array[i] < array[pivot_index]) {
                i += 1;
            }
            while (array[j] > array[pivot_index]) {
                j -= 1;
            }
            if (i <= j) {
                Swap(&array[i], &array[j]);
                i += 1;
                j -= 1;
            }
        }
        QuickSort(array, left, j);
        QuickSort(array, i, right);
    }
}

int main() {
    int N;

    if (scanf("%d", &N) == 0) {
        return 0;
    }

    int *array = (int *) malloc(sizeof(int) * N);

    assert(array);

    for (int i = 0; i < N; ++i) {
        if (scanf("%d", &array[i]) == 0) {
            free(array);
            return 0;
        }
    }

    QuickSort(array, 0, N-1);

    for (int i = 0; i < N; ++i) {
        printf("%d ", array[i]);
    }
    free(array);
    return 0;
}
